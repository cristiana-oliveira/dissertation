name: CI/CD Pipeline for Java Maven Project with Minikube and Java 17

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17 (or your projectâ€™s specific version)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Use 'temurin' as the distribution for JDK 17

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build with Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Step 5: Run Unit Tests
      - name: Run Unit Tests
        run: mvn test

      # Step 6: Set up Minikube
      - name: start minikube
        uses: medyagh/setup-minikube@latest
        id: minikube
        with:
          cache: false
          minikube-version: 1.24.0
          driver: docker
          container-runtime: containerd
          kubernetes-version: v1.22.3
          cpus: 4
          memory: 4000m
          cni: bridge
          addons: registry,ingress
          extra-config: 'kubelet.max-pods=10'
          feature-gates: 'DownwardAPIHugePages=true'
          mount-path: '/Users/user1/test-files:/testdata'
          wait: false
          insecure-registry: 'localhost:5000,10.0.0.0/24'
          start-args: '--delete-on-failure --subnet 192.168.50.0'

      # Step 7: Set up Docker for Minikube
      - name: Set up Docker for Minikube
        run: eval $(minikube docker-env)

      # Step 8: Build Docker Image with Minikube's Docker
      - name: Build Docker Image
        run: |
         docker build -t myrepo:${{ github.sha }} .

      # Step 9: Load the Docker image into Minikube
      - name: Load Docker Image into Minikube
        run: minikube image load myrepo:${{ github.sha }}

      # Step 10: Generate Kubernetes YAML files using Helm
      - name: Generate Kubernetes YAML files
        run: helm template release helm/dissertation --set image.repository=myrepo --set image.tag=${{ github.sha }} > k8s-manifests.yaml

      # Step 11: Deploy to Minikube using Helm
      - name: Deploy to Minikube
        run: |
          helm upgrade --install release helm/dissertation --set image.repository=myrepo --set image.tag=${{ github.sha }}

      # Step 12: Test service URLs
      - name: Test service URLs
        run: |
            minikube service list
            kubectl wait --for=condition=ready pod -l app=dissertation --timeout=1m -n default
            kubectl get pods
            kubectl describe svc release-dissertation
            minikube service release-dissertation --url
            echo "------------------opening the service------------------"
            curl $(minikube service release-dissertation --url)/app/home     
